{"version":3,"sources":["components/styles.js","components/Form/styles.js","components/Input/styles.js","components/Input/index.js","components/RadioGroup/index.js","utils/pixKeyTypes.js","utils/generatePropsRandom.js","contexts/forceReloadData.js","components/Switch/index.js","app/styles.js","data/types.js","utils/typesUtils.js","components/CheckBox/index.js","components/Form/components/TypesTransaction/styles.js","components/Form/components/TypesTransaction/index.js","components/Form/index.js","services/argon2i.js","utils/base64.js","data/formDataDefault.js","components/RequestJson/styles.js","components/RequestJson/index.js","components/UrlParametersList/styles.js","components/UrlParametersList/index.js","app/index.js","routes.js","index.js"],"names":["ContainerRow","styled","div","ContainerFlexWidth","widthPercent","Container","ContainerHeight","height","FormLabelCustom","h2","ContainerFlexWidthCustom","InputCustom","TextField","Input","label","value","setValue","style","marginBottom","marginTop","id","size","variant","onChange","e","target","StyledFormControlLabel","props","FormControlLabel","theme","checked","color","palette","primary","main","MyFormControlLabel","defaultCheckedValue","useRadioGroup","UseRadioGroup","labelGroup","checkData","setChecked","validDirection","direction","FormLabel","userSelect","component","RadioGroup","defaultValue","name","event","flexDirection","map","data","control","Radio","PixKeyTypes","getRandomHash","uuidv4","replace","substring","getRandomMerchantTransactionId","ForceReloadDataContext","createContext","ForceReloadDataProvider","children","useState","disable","setDisable","Provider","useForceReloadData","context","useContext","Error","InputSwitch","Switch","ContainerResult","CustomButton","Button","operation_withdraw","typesList","WIRETRANFER","BILLET","PIX","WALLET","CheckboxesGroup","isChecked","FormControl","sx","m","mr","FormGroup","Checkbox","ContainerCheckTypes","typesCheckedsDefault","TypesTransaction","setType","operation","setCheckDataSelectedType","showingAndSetPixKeyDefault","typesCheckeds","setTypesCheckeds","setTypesChecked","typeKey","currentTypesCheckeds","newTypesCheckeds","newType","binTypePix","binTypeBillet","binTypeWireTransfer","binTypeWallet","parseInt","toString","getTypeInteger","useEffect","newCheckDataSelectedType","push","enableCheckDataSelectedType","console","log","Form","setData","setGateway_token","gateway_token","setUrlGenerated","base_url","setBaseUrl","typeFormSelected","dataDefault","merchant_id","setMerchantId","merchant_transaction_id","setMerchantTransactionId","email","setEmail","document_number","setDocumentNumber","account_id","setAccountId","currency","setCurrency","setOperation","amount","setAmount","callback_url","setcCallback_url","redirect_url","setRedirect_url","type","selected_type","setSelected_type","checkDataSelectedType","pix_key_type","setPix_key_type","pix_key","setPix_key","login_email","setLoginEmail","password","setPassword","logo_url","setLogoUrl","auto_approve","setAuto_approve","checkIsTypeWithdrawValid","Type","handleCleanPixKeyData","isDepositWallet","isWithdraw","oldData","alignItems","margin","onClick","width","textTransform","Typography","string_value","packageJson","version","argon2","require","getArgon2i","pass","a","hash","salt","time","mem","parallelism","hashLen","ArgonType","Argon2i","then","encoded","catch","error","message","code","argon2i","utf8_to_b64","str","window","btoa","unescape","encodeURIComponent","DataDefaultDev","DataDefaultPlayground","PColor","p","RequestJson","dataRequest","url","urlGateway","textButton","baseUrl","isDevLocalhost","devLocalhostPort","rest","getUrlGateway","handleCopyToClipboard","dataRequestJson","JSON","stringify","textToCopy","copyToClipboard","textToNotification","NotificationManager","success","IconButtonMain","OpenInNewIcon","ContentCopyIcon","handleButtonAction","open","paddingTop","disabled","endIcon","marginLeft","maxWidth","background","SectionTitle","ListContainer","ul","ListItem","li","isEmpty","Alert","Legend","AlertContainer","requiredFields","UrlParametersList","parameters","validationArray","Object","entries","forEach","param","includes","length","index","isRequired","renderParametersItem","App","query","URLSearchParams","useLocation","search","isDev","get","isDevPlayground","React","urlGenerated","setURL","setUrlGateway","setTypeFormSelected","urlGatewayParameters","setUrlGatewayParameters","DataURL","signature","OBJ_DataURL","STRING_Signature","logoUrl","mock_type","mock_auto_approve","Signature","handleGenerateSignature","urlWithoutSignature","valueToGetArgon2iHash","argon2iHash","justifyContent","marginRight","handleGenerateURL","minWidth","toUpperCase","BrowserRouter","history","exact","path","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c3aae53.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: auto;\n  @media (max-width: 930px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ContainerFlexWidth = styled.div`\n  width: ${({ widthPercent }) => (widthPercent ? `${widthPercent}%` : \"100%\")};\n  flex-direction: row;\n  height: auto;\n  @media (max-width: 930px) {\n    flex-direction: column;\n  }\n`;\n","import styled from \"styled-components\";\nimport { ContainerFlexWidth } from \"../styles\";\n\nexport const Container = styled.div`\n  width: 45%;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 20px 20px 20px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 100%;\n    padding: 10px;\n  }\n`;\n\nexport const ContainerHeight = styled.div`\n  width: 100%;\n  height: ${({ height }) => (height ? `${height}px` : 0)};\n  min-height: ${({ height }) => (height ? `${height}px` : 0)};\n`;\n\nexport const ContainerCheckTypes = styled.div`\n  width: 100%;\n  flex-direction: row;\n  height: auto;\n`;\n\nexport const FormLabelCustom = styled.h2`\n  font-size: 18px;\n  color: grey;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`;\n","import styled from \"styled-components\";\nimport TextField from \"@mui/material/TextField\";\n\nexport const InputCustom = styled(TextField)`\n  width: 100%;\n`;\n","import React from \"react\";\nimport { InputCustom } from \"./styles\";\n\nfunction Input({ label, value, setValue }) {\n  return (\n    <InputCustom\n      value={value}\n      style={{ marginBottom: 5, marginTop: 5 }}\n      id=\"outlined-basic\"\n      label={label}\n      size=\"small\"\n      variant=\"outlined\"\n      onChange={(e) => setValue(e.target.value)}\n    />\n  );\n}\n\nexport default Input;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport RadioGroup, { useRadioGroup } from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Radio from \"@mui/material/Radio\";\n// import { Container } from './styles';\n\nconst StyledFormControlLabel = styled((props) => (\n  <FormControlLabel {...props} />\n))(({ theme, checked }) => ({\n  \".MuiFormControlLabel-label\": checked && {\n    color: theme.palette.primary.main,\n  },\n}));\n\nfunction MyFormControlLabel({ defaultCheckedValue, ...props }) {\n  const radioGroup = useRadioGroup();\n  let checked = false;\n  if (radioGroup) {\n    checked = defaultCheckedValue === props.value;\n  }\n\n  return <StyledFormControlLabel checked={checked} {...props} />;\n}\n\nexport default function UseRadioGroup({\n  labelGroup,\n  checkData = [],\n  defaultCheckedValue,\n  setChecked,\n  direction,\n}) {\n  const validDirection = direction || \"row\";\n\n  return (\n    <>\n      <FormLabel\n        style={{ userSelect: \"none\", marginTop: -13 }}\n        component=\"legend\"\n      >\n        {labelGroup}\n      </FormLabel>\n      <RadioGroup\n        defaultValue=\"first\"\n        name=\"use-radio-group\"\n        onChange={(event) => setChecked(event.target.value)}\n        style={{ flexDirection: validDirection }}\n      >\n        {checkData.map((data) => (\n          <MyFormControlLabel\n            key={data.value}\n            defaultCheckedValue={defaultCheckedValue}\n            value={data.value}\n            label={data.label}\n            control={<Radio />}\n          />\n        ))}\n      </RadioGroup>\n    </>\n  );\n}\n","// pix_key_type\n// 0 - document (cpf/cnpf)\n// 2 - phone\n// 3 - email\n\nexport const PixKeyTypes = {\n  document: \"0\",\n  phone: \"2\",\n  email: \"3\",\n};\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport function getRandomHash(size) {\n  const randomMerchantTransactionId = uuidv4().replace(/-/g, \"\");\n  return randomMerchantTransactionId.substring(0, size);\n}\n\nexport function getRandomMerchantTransactionId() {\n  return getRandomHash(10);\n}\n\nexport function getRandomUserAccountId() {\n  return getRandomHash(6);\n}\n","import React, { createContext, useState, useContext } from \"react\";\n\nexport const ForceReloadDataContext = createContext();\n\nexport default function ForceReloadDataProvider({ children }) {\n  const [disable, setDisable] = useState(false);\n\n  return (\n    <ForceReloadDataContext.Provider\n      value={{\n        disable,\n        setDisable,\n      }}\n    >\n      {children}\n    </ForceReloadDataContext.Provider>\n  );\n}\n\nexport function useForceReloadData() {\n  const context = useContext(ForceReloadDataContext);\n  if (!context)\n    throw new Error(\"useDisable must be used within a ForceReloadDataProvider\");\n  const { disable, setDisable } = context;\n  return { disable, setDisable };\n}\n","import { FormLabel, Switch } from \"@mui/material\";\nimport React from \"react\";\n\nconst InputSwitch = (props) => {\n  const { name, checked, label, onChange } = props;\n\n  return (\n    <>\n      <FormLabel\n        style={{ userSelect: \"none\", marginTop: -13 }}\n        component=\"legend\"\n      >\n        {label}\n      </FormLabel>\n      <Switch\n        checked={checked}\n        onChange={(event) => onChange(event)}\n        color=\"primary\"\n        name={name}\n      />\n    </>\n  );\n};\n\nexport default InputSwitch;\n","import styled from \"styled-components\";\nimport Button from \"@mui/material/Button\";\nimport { ContainerFlexWidth } from \"../components/styles\";\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 10px;\n  background: #fff;\n  justify-content: center;\n  align-items: flex-start;\n  flex-direction: row;\n  @media (max-width: 930px) {\n    flex-direction: column;\n    padding: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const ContainerResult = styled.div`\n  width: 40%;\n  margin-left: 20px;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 20px 20px 20px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  @media (max-width: 930px) {\n    width: 100%;\n    margin-left: 0px;\n  }\n`;\n\nexport const CustomButton = styled(Button)`\n  @media (max-width: 930px) {\n    width: 100%;\n  }\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n","export const operation_deposit = \"0\";\nexport const operation_withdraw = \"5\";\n","// 0000 - 0 - Nenhum\n// 0001 - 1 - Pix\n// 0010 - 2 - Boleto\n// 0011 - 3 - Boleto, Pix\n// 0100 - 4 - TED\n// 0101 - 5 - TED, Pix\n// 0110 - 6 - TED, Boleto\n// 0111 - 7 - TED, Boleto, PIX\n// 1000 - 8 - Wallet\n// 1001 - 9 - Wallet, Pix\n// 1010 - 10 - Wallet, Boleto\n// 1011 - 11 - Wallet, Boleto, Pix\n// 1100 - 12 - Wallet, Ted\n// 1101 - 13 - Wallet, Ted, Pix\n// 1110 - 14 - Wallet, Ted, Boleto\n// 1111 - 15 - Wallet, Ted, Boleto, Pix (Todas)\n\n// 0 - TED\n// 1 - Boleto\n// 4 - PIX\n// 5 - Wallet\nexport const typesList = {\n  WIRETRANFER: 0,\n  BILLET: 1,\n  PIX: 4,\n  WALLET: 5,\n};\n\nexport function getTypeInteger(typesCheckeds) {\n  const binTypePix = typesCheckeds[4] ? \"1\" : \"0\";\n  const binTypeBillet = typesCheckeds[1] ? \"1\" : \"0\";\n  const binTypeWireTransfer = typesCheckeds[0] ? \"1\" : \"0\";\n  const binTypeWallet = typesCheckeds[5] ? \"1\" : \"0\";\n  const typeInBinary =\n    binTypeWallet + binTypeWireTransfer + binTypeBillet + binTypePix;\n  const typeInInteger = parseInt(typeInBinary, 2);\n  return typeInInteger.toString();\n}\n","import * as React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nexport default function CheckboxesGroup({ isChecked, setChecked, label }) {\n  return (\n    <FormControl sx={{ m: 0, mr: 3 }} component=\"fieldset\" variant=\"standard\">\n      <FormGroup>\n        <FormControlLabel\n          style={{ userSelect: \"none\" }}\n          label={label || \"\"}\n          control={\n            <Checkbox\n              checked={isChecked}\n              onChange={(event) => setChecked(event.target.checked)}\n              name=\"gilad\"\n            />\n          }\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const ContainerCheckTypes = styled.div`\n  width: 100%;\n  flex-direction: row;\n  height: auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { typesList, getTypeInteger } from \"../../../../utils/typesUtils\";\nimport { operation_deposit, operation_withdraw } from \"../../../../data/types\";\nimport Checkbox from \"../../../CheckBox\";\n\nimport { ContainerCheckTypes } from \"./styles\";\n\nconst typesCheckedsDefault = {\n  [typesList.WIRETRANFER]: false,\n  [typesList.BILLET]: false,\n  [typesList.PIX]: false,\n  [typesList.WALLET]: false,\n};\n\nconst TypesTransaction = ({\n  setType,\n  operation,\n  setCheckDataSelectedType,\n  showingAndSetPixKeyDefault,\n}) => {\n  const [typesCheckeds, setTypesCheckeds] = useState({\n    ...typesCheckedsDefault,\n    [typesList.PIX]: true,\n  });\n\n  function setTypesChecked(typeKey, isChecked) {\n    let currentTypesCheckeds = typesCheckeds;\n    if (operation === operation_withdraw) {\n      currentTypesCheckeds = { ...typesCheckedsDefault };\n    }\n    const newTypesCheckeds = { ...currentTypesCheckeds, [typeKey]: isChecked };\n    setTypesCheckeds(newTypesCheckeds);\n    const newType = getTypeInteger(newTypesCheckeds);\n    setType(newType);\n  }\n\n  function setTypesCheckedDefault() {\n    if (operation === operation_withdraw) {\n      setTypesCheckeds({\n        ...typesCheckedsDefault,\n        [typesList.PIX]: true,\n      });\n      setType(\"1\");\n    }\n  }\n\n  useEffect(() => {\n    setTypesCheckedDefault(operation, setTypesCheckeds);\n  }, [operation]);\n\n  useEffect(() => {\n    function enableCheckDataSelectedType() {\n      const newCheckDataSelectedType = [];\n      if (typesCheckeds[4]) {\n        newCheckDataSelectedType.push({\n          value: typesList.PIX.toString(),\n          label: \"Pix\",\n        });\n      }\n      if (typesCheckeds[1]) {\n        newCheckDataSelectedType.push({\n          value: typesList.BILLET.toString(),\n          label: \"Billet\",\n        });\n      }\n      if (typesCheckeds[0]) {\n        newCheckDataSelectedType.push({\n          value: typesList.WIRETRANFER.toString(),\n          label: \"Wire Transfer\",\n        });\n      }\n      if (typesCheckeds[5]) {\n        newCheckDataSelectedType.push({\n          value: typesList.WALLET.toString(),\n          label: \"Paylivre Wallet\",\n        });\n      }\n\n      setCheckDataSelectedType(newCheckDataSelectedType);\n    }\n    enableCheckDataSelectedType();\n    showingAndSetPixKeyDefault();\n    console.log({ typesCheckeds });\n  }, [typesCheckeds]);\n\n  return (\n    <ContainerCheckTypes>\n      <Checkbox\n        label=\"PIX\"\n        isChecked={typesCheckeds[typesList.PIX]}\n        setChecked={(isChecked) => setTypesChecked(typesList.PIX, isChecked)}\n      />\n      <Checkbox\n        label=\"Paylivre Wallet\"\n        isChecked={typesCheckeds[typesList.WALLET]}\n        setChecked={(isChecked) => setTypesChecked(typesList.WALLET, isChecked)}\n      />\n      {operation === operation_deposit && (\n        <>\n          <Checkbox\n            label=\"Billet\"\n            isChecked={typesCheckeds[typesList.BILLET]}\n            setChecked={(isChecked) =>\n              setTypesChecked(typesList.BILLET, isChecked)\n            }\n          />\n          <Checkbox\n            label=\"Wire Transfer\"\n            isChecked={typesCheckeds[typesList.WIRETRANFER]}\n            setChecked={(isChecked) =>\n              setTypesChecked(typesList.WIRETRANFER, isChecked)\n            }\n          />\n        </>\n      )}\n    </ContainerCheckTypes>\n  );\n};\n\nexport default TypesTransaction;\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { Typography } from \"@mui/material\";\nimport {\n  Container,\n  FormLabelCustom,\n  ContainerHeight,\n  ContainerFlexWidthCustom,\n} from \"./styles\";\n\nimport { ContainerRow } from \"../styles\";\n\nimport Input from \"../Input\";\nimport RadioGroup from \"../RadioGroup\";\nimport { PixKeyTypes } from \"../../utils/pixKeyTypes\";\n\nimport { getRandomMerchantTransactionId } from \"../../utils/generatePropsRandom\";\n\nimport { useForceReloadData } from \"../../contexts/forceReloadData\";\nimport InputSwitch from \"../Switch\";\nimport packageJson from \"../../../package.json\";\nimport { CustomButton } from \"../../app/styles\";\nimport { operation_deposit, operation_withdraw } from \"../../data/types\";\nimport TypesTransaction from \"./components/TypesTransaction\";\n\nfunction Form({\n  setData,\n  setGateway_token,\n  gateway_token,\n  setUrlGenerated,\n  base_url,\n  setBaseUrl,\n  typeFormSelected,\n  dataDefault,\n}) {\n  const logo_url_example =\n    \"https://github.com/paylivre/gateway-example-react-js/blob/master/assets/logo_jackpot_new.png?raw=true\";\n  const [merchant_id, setMerchantId] = useState(dataDefault.merchant_id);\n  const [merchant_transaction_id, setMerchantTransactionId] = useState(\n    getRandomMerchantTransactionId()\n  );\n  const [email, setEmail] = useState(dataDefault.email);\n  const [document_number, setDocumentNumber] = useState(\n    dataDefault.document_number\n  );\n  const [account_id, setAccountId] = useState(\"123654asd\");\n  const [currency, setCurrency] = useState(\"BRL\");\n  const [operation, setOperation] = useState(operation_deposit);\n  const [amount, setAmount] = useState(\"500\");\n  const [callback_url, setcCallback_url] = useState(\"https://www.google.com\");\n  const [redirect_url, setRedirect_url] = useState(\n    \"https://www.merchant_to_you.com\"\n  );\n  const [type, setType] = useState(\"1\");\n  const [selected_type, setSelected_type] = useState(\"4\");\n  const [checkDataSelectedType, setCheckDataSelectedType] = useState([]);\n  const [pix_key_type, setPix_key_type] = useState(\"\");\n  const [pix_key, setPix_key] = useState(\"\");\n  const [login_email, setLoginEmail] = useState(dataDefault.email);\n  const [password, setPassword] = useState(\"123123123\");\n  const [logo_url, setLogoUrl] = useState(logo_url_example);\n  const [auto_approve, setAuto_approve] = useState(true);\n  const { disable, setDisable } = useForceReloadData();\n\n  function checkIsTypeWithdrawValid(Type) {\n    switch (Type) {\n      case \"1\": {\n        return true;\n      }\n      case \"9\": {\n        return true;\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n\n  function handleCleanPixKeyData() {\n    setPix_key_type(\"\");\n    setPix_key(\"\");\n  }\n\n  function showingAndSetPixKeyDefault() {\n    if (!checkIsTypeWithdrawValid(type)) {\n      handleCleanPixKeyData();\n    }\n  }\n\n  const isDepositWallet =\n    typeFormSelected === \"json\" &&\n    operation === operation_deposit &&\n    selected_type === \"5\";\n\n  useEffect(() => {\n    // Toda vez que alterar algum dado no data\n    setUrlGenerated(false);\n    setDisable(false);\n\n    const isWithdraw = operation === operation_withdraw;\n\n    function getType() {\n      return type;\n    }\n\n    setData((oldData) => {\n      return {\n        ...oldData,\n        account_id,\n        amount,\n        auto_approve: auto_approve === true ? \"1\" : \"0\",\n        callback_url,\n        currency,\n        document_number,\n        email,\n        merchant_id,\n        operation,\n        merchant_transaction_id,\n        redirect_url,\n        selected_type: type === \"0\" ? \"\" : selected_type,\n        type: getType(),\n        login_email: isDepositWallet ? login_email : \"\",\n        password: isDepositWallet ? password : \"\",\n        pix_key_type: isWithdraw ? pix_key_type : \"\",\n        pix_key: isWithdraw ? pix_key : \"\",\n        logo_url,\n      };\n    });\n  }, [\n    setData,\n    merchant_id,\n    merchant_transaction_id,\n    email,\n    document_number,\n    account_id,\n    auto_approve,\n    currency,\n    operation,\n    amount,\n    callback_url,\n    redirect_url,\n    setUrlGenerated,\n    gateway_token,\n    base_url,\n    type,\n    selected_type,\n    pix_key_type,\n    pix_key,\n    logo_url,\n  ]);\n\n  function handleReloadRandomFormatData() {\n    setMerchantTransactionId(getRandomMerchantTransactionId());\n    setDisable(false);\n  }\n\n  function isAutoApproveSelected() {\n    return auto_approve === true ? (\n      <Typography component=\"span\" color=\"primary\">\n        true\n      </Typography>\n    ) : (\n      <Typography component=\"span\" color=\"error\">\n        false\n      </Typography>\n    );\n  }\n\n  function handleSetPixKey(string_value) {\n    if (string_value === PixKeyTypes.document) {\n      setPix_key_type(PixKeyTypes.document);\n      setPix_key(document_number);\n    }\n\n    if (string_value === PixKeyTypes.email) {\n      setPix_key_type(PixKeyTypes.email);\n      setPix_key(email);\n    }\n\n    if (string_value === PixKeyTypes.phone) {\n      setPix_key_type(PixKeyTypes.phone);\n      setPix_key(\"\");\n    }\n  }\n\n  return (\n    <Container>\n      <ContainerRow\n        style={{ marginBottom: 20, height: 50, alignItems: \"center\" }}\n      >\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <FormLabelCustom style={{ margin: 0 }}>\n            Merchant Data:\n          </FormLabelCustom>\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={50} style={{}}>\n          <Button\n            onClick={() => handleReloadRandomFormatData()}\n            style={{\n              width: \"100%\",\n              textTransform: \"none\",\n            }}\n            variant={disable === true ? \"contained\" : \"outlined\"}\n            color=\"success\"\n          >\n            Reload Random Data\n          </Button>\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <ContainerRow>\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <Input\n            value={merchant_id}\n            setValue={(value) => setMerchantId(value)}\n            label=\"Merchant ID:\"\n          />\n          <ContainerHeight height={15} />\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={45}>\n          <Input\n            value={merchant_transaction_id}\n            setValue={(value) => setMerchantTransactionId(value)}\n            label=\"Merchant Transaction ID:\"\n          />\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <ContainerHeight height={5} />\n      <Input\n        value={gateway_token}\n        setValue={(value) => setGateway_token(value)}\n        label=\"Gateway Token:\"\n      />\n      <FormLabelCustom>User Data:</FormLabelCustom>\n      <Input\n        value={email}\n        setValue={(value) => setEmail(value)}\n        label=\"User Email: (OPTIONAL)\"\n      />\n      <ContainerHeight height={20} />\n      <ContainerRow>\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <Input\n            value={document_number}\n            setValue={(value) => setDocumentNumber(value)}\n            label=\"User Document - CPF/CNPJ: (OPTIONAL)\"\n          />\n        </ContainerFlexWidthCustom>\n\n        <ContainerFlexWidthCustom widthPercent={48}>\n          <Input\n            value={account_id}\n            setValue={(value) => setAccountId(value)}\n            label=\"User Account ID in Merchant:\"\n          />\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <FormLabelCustom>Transaction Data:</FormLabelCustom>\n      <ContainerRow>\n        <ContainerFlexWidthCustom widthPercent={50}>\n          <Input\n            value={amount}\n            setValue={(value) => setAmount(value)}\n            label=\"Amount:\"\n          />\n        </ContainerFlexWidthCustom>\n        <ContainerHeight height={15} />\n        <ContainerFlexWidthCustom widthPercent={60}>\n          <InputSwitch\n            label=\"Auto approve\"\n            checked={auto_approve}\n            onChange={(event) => setAuto_approve(event.target.checked)}\n          />\n          {isAutoApproveSelected()}\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={60}>\n          <RadioGroup\n            defaultCheckedValue={currency}\n            setChecked={(value) => setCurrency(value)}\n            labelGroup=\"Currency\"\n            checkData={[\n              { value: \"BRL\", label: \"BRL\" },\n              { value: \"USD\", label: \"USD\" },\n            ]}\n          />\n        </ContainerFlexWidthCustom>\n      </ContainerRow>\n      <ContainerHeight height={15} />\n      <RadioGroup\n        defaultCheckedValue={operation}\n        setChecked={(value) => setOperation(value)}\n        labelGroup=\"Operation\"\n        checkData={[\n          { value: \"0\", label: \"Deposit\" },\n          { value: \"5\", label: \"Withdraw\" },\n        ]}\n      />\n      <ContainerHeight height={15} />\n      <FormLabel component=\"legend\">Type passed by merchant</FormLabel>\n\n      <TypesTransaction\n        setType={setType}\n        operation={operation}\n        setCheckDataSelectedType={setCheckDataSelectedType}\n        showingAndSetPixKeyDefault={() => showingAndSetPixKeyDefault()}\n      />\n\n      {typeFormSelected === \"json\" && (\n        <>\n          <ContainerHeight height={15} />\n          <RadioGroup\n            defaultCheckedValue={selected_type}\n            setChecked={(value) => setSelected_type(value)}\n            labelGroup=\"User selected type\"\n            checkData={checkDataSelectedType}\n          />\n        </>\n      )}\n      {isDepositWallet && (\n        <>\n          <ContainerHeight height={15} />\n          <ContainerRow>\n            <ContainerFlexWidthCustom widthPercent={48}>\n              <Input\n                value={login_email}\n                setValue={(value) => setLoginEmail(value)}\n                label=\"Email Login Paylivre\"\n              />\n              <ContainerHeight height={15} />\n            </ContainerFlexWidthCustom>\n            <ContainerFlexWidthCustom widthPercent={45}>\n              <Input\n                value={password}\n                setValue={(value) => setPassword(value)}\n                label=\"Password Login Paylivre\"\n              />\n            </ContainerFlexWidthCustom>\n          </ContainerRow>\n        </>\n      )}\n      {operation === operation_withdraw &&\n        selected_type === \"4\" &&\n        checkIsTypeWithdrawValid(type) && (\n          <>\n            <ContainerRow>\n              <ContainerFlexWidthCustom widthPercent={48}>\n                <ContainerHeight height={25} />\n                <RadioGroup\n                  defaultCheckedValue={pix_key_type}\n                  setChecked={(value) => handleSetPixKey(value)}\n                  labelGroup=\"Pix Key Type(OPTIONAL)\"\n                  checkData={[\n                    { value: PixKeyTypes.document, label: \"CPF/CNPJ\" },\n                    { value: PixKeyTypes.phone, label: \"Phone\" },\n                    { value: PixKeyTypes.email, label: \"Email\" },\n                  ]}\n                />\n              </ContainerFlexWidthCustom>\n              <ContainerFlexWidthCustom widthPercent={48}>\n                <ContainerHeight height={30} />\n                <Input\n                  value={pix_key}\n                  setValue={(value) => setPix_key(value)}\n                  label=\"User Pix Key\"\n                />\n              </ContainerFlexWidthCustom>\n            </ContainerRow>\n            <ContainerRow>\n              <span style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n                Note: The Pix Key Type is optional, but if selected it is\n                necessary to fill in the User Pix Key Value.\n              </span>\n            </ContainerRow>\n            <ContainerRow>\n              <CustomButton\n                onClick={() => handleCleanPixKeyData()}\n                style={{\n                  width: \"30%\",\n                  textTransform: \"none\",\n                }}\n                variant=\"contained\"\n              >\n                Clear Data Pix\n              </CustomButton>\n            </ContainerRow>\n          </>\n        )}\n      <ContainerHeight height={15} />\n      <Input\n        value={callback_url}\n        setValue={(value) => setcCallback_url(value)}\n        label=\"Callback URL:\"\n      />\n      <ContainerHeight height={20} />\n      <Input\n        value={redirect_url}\n        setValue={(value) => setRedirect_url(value)}\n        label=\"Redirect URL: (OPTIONAL)\"\n      />\n      <ContainerHeight height={15} />\n      <FormLabelCustom>Environment:</FormLabelCustom>\n      <Input\n        value={base_url}\n        setValue={(value) => setBaseUrl(value)}\n        label=\"Base URL:\"\n      />\n      <ContainerHeight height={15} />\n      <Input\n        value={logo_url}\n        setValue={(value) => setLogoUrl(value)}\n        label=\"Logo URL: (OPTIONAL)\"\n      />\n      <FormLabel component=\"legend\" style={{ margin: \"0.6rem 0\" }}>\n        v{packageJson.version}\n      </FormLabel>\n    </Container>\n  );\n}\n\nexport default Form;\n","import { getRandomHash } from \"../utils/generatePropsRandom\";\n\nconst argon2 = require(\"argon2-browser\");\n\nexport async function getArgon2i(pass) {\n  const argon2i = await argon2\n    .hash({\n      pass,\n      salt: getRandomHash(14),\n      time: 2,\n      mem: 16,\n      parallelism: 1,\n      hashLen: 16,\n      type: argon2.ArgonType.Argon2i,\n    })\n    .then((hash) => hash.encoded)\n    .catch((e) => console.error(e.message, e.code));\n  return argon2i;\n}\n","export function utf8_to_b64(str) {\n  return window.btoa(unescape(encodeURIComponent(str)));\n}\n","export const DataDefaultDev = {\n  base_url: \"https://dev.gateway.paylivre.com\",\n  gateway_token: \"vfWrvWcvxuqmt4yfEtHZKU4a9q0lSAnZ\",\n  merchant_id: \"302\",\n  merchant_transaction_id: \"\",\n  email: \"user_gateway_test@tutanota.com\",\n  document_number: \"61317581075\",\n};\n\nexport const DataDefaultPlayground = {\n  base_url: \"https://playground.gateway.paylivre.com\",\n  gateway_token: \"0c85yWaiBWx1Mclvink7suWrHoEQnH8Q\",\n  merchant_id: \"1508\",\n  merchant_transaction_id: \"\",\n  email: \"user_gateway_test@tutanota.com\",\n  document_number: \"61317581075\",\n};\n","import styled from \"styled-components\";\nimport Button from \"@mui/material/Button\";\nimport { ContainerFlexWidth } from \"../styles\";\n\nexport const Container = styled.div`\n  display: flex;\n  background: #292929;\n  flex-wrap: nowrap;\n  width: auto;\n  height: auto;\n  min-height: 100px;\n  justify-content: center;\n  padding: 0 20px 20px 20px;\n  border-radius: 5px;\n  flex-direction: column;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 88%;\n    padding: 20px;\n  }\n`;\n\nexport const PColor = styled.p`\n  font-size: small;\n  color: ${({ color }) => color || \"#fff\"};\n  margin: 0;\n  max-width: 100%;\n  display: flex;\n  font-size: 14px;\n  word-break: break-all;\n  font-family: \"Courier New\", Courier, monospace;\n`;\n\nexport const FormLabelCustom = styled.h2`\n  font-size: 18px;\n  color: white;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\n  @media (max-width: 930px) {\n    width: 100%;\n    flex-direction: column;\n    margin: 5px 0;\n  }\n`;\n\nexport const CustomButton = styled(Button)`\n  @media (max-width: 930px) {\n    width: 100%;\n  }\n`;\n","import React from \"react\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport \"react-notifications/lib/notifications.css\";\nimport copyToClipboard from \"copy-to-clipboard\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nimport JSONPretty from \"react-json-pretty\";\nimport \"./jsonStyle.css\";\nimport {\n  Container,\n  PColor,\n  FormLabelCustom,\n  ContainerFlexWidthCustom,\n  CustomButton,\n} from \"./styles\";\nimport { ContainerRow } from \"../styles\";\n\nimport { useForceReloadData } from \"../../contexts/forceReloadData\";\n\nfunction RequestJson({\n  dataRequest,\n  url,\n  urlGateway,\n  label,\n  textButton,\n  type,\n  baseUrl,\n  isDevLocalhost,\n  devLocalhostPort,\n  ...rest\n}) {\n  const { disable, setDisable } = useForceReloadData();\n\n  function getLocahostBaseUrl() {\n    const portDefault = \"3000\";\n    const port = devLocalhostPort !== null ? devLocalhostPort : portDefault;\n    return `http://localhost:${port}`;\n  }\n\n  function getUrlGateway() {\n    if (isDevLocalhost) {\n      return urlGateway.replace(baseUrl, getLocahostBaseUrl());\n    }\n    return urlGateway;\n  }\n\n  function handleCopyToClipboard() {\n    if (!disable) {\n      const dataRequestJson = JSON.stringify({ ...dataRequest, url });\n      const textToCopy = type === \"url\" ? getUrlGateway() : dataRequestJson;\n      copyToClipboard(textToCopy);\n      const textToNotification = type === \"url\" ? \"Copied URL\" : \"JSON Copied\";\n      NotificationManager.success(textToNotification, \"\", 1000);\n      setDisable(true);\n    }\n  }\n\n  const IconButtonMain = type === \"url\" ? OpenInNewIcon : ContentCopyIcon;\n\n  function handleOpenUrlNewWindow() {\n    if (!disable) {\n      window.open(getUrlGateway());\n      setDisable(true);\n    }\n  }\n\n  function handleButtonAction() {\n    if (type === \"url\") {\n      handleOpenUrlNewWindow();\n    } else {\n      handleCopyToClipboard();\n    }\n  }\n\n  return (\n    <Container {...rest}>\n      <ContainerRow\n        style={{ alignItems: \"center\", paddingTop: 10, marginBottom: 10 }}\n      >\n        <ContainerFlexWidthCustom widthPercent={50}>\n          <FormLabelCustom>{label}</FormLabelCustom>\n        </ContainerFlexWidthCustom>\n        <ContainerFlexWidthCustom widthPercent={50}>\n          <CustomButton\n            disabled={disable}\n            endIcon={<IconButtonMain />}\n            onClick={() => handleButtonAction()}\n            style={{ width: \"100%\", textTransform: \"none\" }}\n            variant=\"contained\"\n          >\n            {textButton}\n          </CustomButton>\n        </ContainerFlexWidthCustom>\n        {type === \"url\" && (\n          <ContainerFlexWidthCustom\n            widthPercent={50}\n            style={{ marginLeft: 20, maxWidth: 140 }}\n          >\n            <CustomButton\n              disabled={disable}\n              endIcon={<ContentCopyIcon />}\n              onClick={() => handleCopyToClipboard()}\n              style={{\n                width: \"100%\",\n                textTransform: \"none\",\n                background: \"#fff\",\n              }}\n              variant=\"outlined\"\n            >\n              Copy URL\n            </CustomButton>\n          </ContainerFlexWidthCustom>\n        )}\n      </ContainerRow>\n\n      <NotificationContainer />\n\n      {dataRequest && (\n        <JSONPretty id=\"json-pretty\" data={{ ...dataRequest, url }} />\n      )}\n\n      {urlGateway && <PColor color=\"#ffff80\">{getUrlGateway()}</PColor>}\n    </Container>\n  );\n}\n\nexport default RequestJson;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  background: transparent;\n  flex-wrap: wrap;\n  width: auto;\n  height: auto;\n  padding: 20px;\n  border-radius: 5px;\n  flex-direction: column;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 88%;\n    padding: 20px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 18px;\n  color: grey;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const ListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  font-size: small;\n  color: ${(props) => props.isEmpty && \"#be453a\"};\n  margin: 0;\n  max-width: 100%;\n  display: flex;\n  font-size: 1.2rem;\n  word-break: break-all;\n  margin: 0.2rem 0;\n  /* font-family: \"Courier New\", Courier, monospace; */\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const Alert = styled.h2`\n  font-size: 18px;\n  color: #be453a;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const Legend = styled.p`\n  font-size: 1rem;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nexport const AlertContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  background: transparent;\n  flex-wrap: wrap;\n  width: auto;\n  height: auto;\n  padding: 20px;\n  border-radius: 5px;\n  flex-direction: column;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  @media (max-width: 930px) {\n    width: 88%;\n    padding: 20px;\n  }\n`;\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { ContainerFlexWidth } from \"../styles\";\nimport {\n  Alert,\n  AlertContainer,\n  Container,\n  Legend,\n  ListContainer,\n  ListItem,\n  SectionTitle,\n} from \"./styles\";\n\nconst requiredFields = [\n  \"merchant_id\",\n  \"operation\",\n  \"merchant_transaction_id\",\n  \"amount\",\n  \"currency\",\n  \"mock_type\",\n  \"account_id\",\n  \"mock_auto_approve\",\n  \"callback_url\",\n];\n\nconst UrlParametersList = (props) => {\n  const { parameters, baseUrl } = props;\n  const validationArray = [];\n\n  Object.entries(parameters).forEach((param) =>\n    validationArray.push(\n      requiredFields.includes(param[0]) && param[1].length === 0\n    )\n  );\n\n  function renderParametersItem(param, index) {\n    const isRequired = requiredFields.includes(param[0]);\n    const isEmpty = param[1].length === 0;\n    return (\n      <ListItem key={index} isEmpty={isEmpty}>\n        {isRequired && \"*\"}\n        {`${param[0]} = ${param[1]}`}\n      </ListItem>\n    );\n  }\n\n  function renderAlert() {\n    return (\n      <AlertContainer>\n        {validationArray.includes(true) && (\n          <Alert>All mandatory fields must be filled!</Alert>\n        )}\n        <Typography variant=\"p\" component=\"p\">\n          Legend:\n        </Typography>\n        <Legend>* - Mandatory field</Legend>\n      </AlertContainer>\n    );\n  }\n\n  return (\n    <Container>\n      <ContainerFlexWidth>\n        <SectionTitle>Url Parameters</SectionTitle>\n        <ListContainer>\n          <ListItem>{baseUrl}</ListItem>\n          <br />\n          {Object.entries(parameters).map((param, index) =>\n            renderParametersItem(param, index)\n          )}\n        </ListContainer>\n      </ContainerFlexWidth>\n      {renderAlert()}\n    </Container>\n  );\n};\n\nexport default UrlParametersList;\n","/* eslint-disable no-unused-expressions */\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Form from \"../components/Form\";\nimport { getArgon2i } from \"../services/argon2i\";\nimport { utf8_to_b64 } from \"../utils/base64\";\nimport { DataDefaultDev, DataDefaultPlayground } from \"../data/formDataDefault\";\nimport {\n  Container,\n  ContainerResult,\n  CustomButton,\n  ContainerFlexWidthCustom,\n} from \"./styles\";\n\nimport { ContainerRow } from \"../components/styles\";\n\nimport RequestJson from \"../components/RequestJson\";\nimport UrlParametersList from \"../components/UrlParametersList\";\nimport { operation_withdraw } from \"../data/types\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction App() {\n  const query = useQuery();\n  const isDev = query.get(\"dev\") === \"1\";\n  const isDevPlayground = query.get(\"playground\") === \"1\";\n  const isDevLocalhost = query.get(\"localhost\") === \"1\";\n  const devLocalhostPort = query.get(\"localhost_port\");\n\n  const dataDefault = !isDev\n    ? DataDefaultPlayground\n    : isDevPlayground\n    ? DataDefaultPlayground\n    : DataDefaultDev;\n\n  const [base_url, setBaseUrl] = React.useState(dataDefault.base_url);\n  const [data, setData] = React.useState({});\n  const [gateway_token, setGateway_token] = React.useState(\n    dataDefault.gateway_token\n  );\n  const [urlGenerated, setUrlGenerated] = React.useState(false);\n  const [url, setURL] = React.useState(\"\");\n  const [urlGateway, setUrlGateway] = React.useState(\"\");\n  const [typeFormSelected, setTypeFormSelected] = React.useState(\"url\");\n  const [urlGatewayParameters, setUrlGatewayParameters] = React.useState({});\n\n  function handleUrlGatewayParameters(OBJ_DataURL, STRING_Signature) {\n    if (!!OBJ_DataURL.pix_key && !!OBJ_DataURL.pix_key_type) {\n      setUrlGatewayParameters({\n        merchant_transaction_id: OBJ_DataURL.merchant_transaction_id,\n        merchant_id: OBJ_DataURL.merchant_id,\n        account_id: OBJ_DataURL.account_id,\n        amount: OBJ_DataURL.amount,\n        currency: OBJ_DataURL.currency,\n        operation: OBJ_DataURL.operation,\n        callback_url: OBJ_DataURL.callback_url,\n        redirect_url: OBJ_DataURL.redirect_url,\n        type: OBJ_DataURL.type,\n        auto_approve: OBJ_DataURL.auto_approve,\n        signature: STRING_Signature || \"\",\n        logoUrl: OBJ_DataURL.logo_url ? OBJ_DataURL.logo_url : \"\",\n        email: OBJ_DataURL.email ? OBJ_DataURL.email : \"\",\n        document_number: OBJ_DataURL.document_number\n          ? OBJ_DataURL.document_number\n          : \"\",\n        pix_key: OBJ_DataURL.pix_key,\n        pix_key_type: OBJ_DataURL.pix_key_type,\n      });\n    } else {\n      setUrlGatewayParameters({\n        merchant_transaction_id: OBJ_DataURL.merchant_transaction_id,\n        merchant_id: OBJ_DataURL.merchant_id,\n        account_id: OBJ_DataURL.account_id,\n        amount: OBJ_DataURL.amount,\n        currency: OBJ_DataURL.currency,\n        operation: OBJ_DataURL.operation,\n        callback_url: OBJ_DataURL.callback_url,\n        redirect_url: OBJ_DataURL.redirect_url,\n        type: OBJ_DataURL.type,\n        auto_approve: OBJ_DataURL.auto_approve,\n        signature: STRING_Signature || \"\",\n        logoUrl: OBJ_DataURL.logo_url ? OBJ_DataURL.logo_url : \"\",\n        email: OBJ_DataURL.email ? OBJ_DataURL.email : \"\",\n        document_number: OBJ_DataURL.document_number\n          ? OBJ_DataURL.document_number\n          : \"\",\n      });\n    }\n  }\n\n  function getUrlGateway(DataURL, signature) {\n    handleUrlGatewayParameters(DataURL, signature);\n\n    const merchant_transaction_id = `merchant_transaction_id=${DataURL.merchant_transaction_id}`;\n    const merchant_id = `merchant_id=${DataURL.merchant_id}`;\n    const account_id = `account_id=${DataURL.account_id}`;\n    const amount = `amount=${DataURL.amount}`;\n    const currency = `currency=${DataURL.currency}`;\n    const operation = `operation=${DataURL.operation}`;\n    const callback_url = `callback_url=${DataURL.callback_url}`;\n    const redirect_url = `redirect_url=${DataURL.redirect_url}`;\n    const mock_type = `type=${DataURL.type}`;\n    const mock_auto_approve = `auto_approve=${DataURL.auto_approve}`;\n    const Signature = signature ? `&signature=${signature}` : \"\";\n    const logoUrl = DataURL.logo_url ? `&logo_url=${DataURL.logo_url}` : \"\";\n    const email = DataURL.email ? `&email=${DataURL.email}` : \"\";\n    const document_number = DataURL.document_number\n      ? `&document_number=${DataURL.document_number}`\n      : \"\";\n    const pix_key = DataURL.pix_key ? `&pix_key=${DataURL.pix_key}` : null;\n    const pix_key_type = DataURL.pix_key_type\n      ? `&pix_key_type=${DataURL.pix_key_type}`\n      : null;\n    let UrlGateway = null;\n\n    if (\n      DataURL.operation === operation_withdraw &&\n      !!DataURL.pix_key &&\n      !!DataURL.pix_key_type\n    ) {\n      UrlGateway = `${base_url}?${merchant_transaction_id}&${merchant_id}&${operation}${email}${document_number}&${amount}&${currency}${pix_key_type}${pix_key}&${mock_type}&${account_id}&${callback_url}&${redirect_url}&${mock_auto_approve}${Signature}${logoUrl}`;\n    } else {\n      UrlGateway = `${base_url}?${merchant_transaction_id}&${merchant_id}&${operation}${email}${document_number}&${amount}&${currency}&${mock_type}&${account_id}&${callback_url}&${redirect_url}&${mock_auto_approve}${Signature}${logoUrl}`;\n    }\n\n    return UrlGateway;\n  }\n\n  async function handleGenerateSignature() {\n    const urlWithoutSignature = getUrlGateway(data);\n\n    console.log(\"debug without signature value\", urlWithoutSignature);\n\n    const valueToGetArgon2iHash = gateway_token + urlWithoutSignature;\n\n    console.log(\"debug with signature to argon\", valueToGetArgon2iHash);\n\n    const argon2iHash = await getArgon2i(valueToGetArgon2iHash);\n    const signature = utf8_to_b64(argon2iHash);\n\n    setURL(urlWithoutSignature);\n\n    setUrlGateway(getUrlGateway(data, signature));\n\n    setData((oldData) => {\n      return { ...oldData, signature };\n    });\n    setUrlGenerated(true);\n  }\n\n  return (\n    <>\n      {isDev && (\n        <ContainerRow style={{ justifyContent: \"center\" }}>\n          <ContainerFlexWidthCustom\n            widthPercent={20}\n            style={{ marginRight: 20, marginBottom: 20 }}\n          >\n            <CustomButton\n              onClick={() => setTypeFormSelected(\"url\")}\n              style={{\n                width: \"100%\",\n                textTransform: \"none\",\n                background: typeFormSelected === \"url\" ? \"#1976d2\" : \"#c4c4c4\",\n              }}\n              variant=\"contained\"\n            >\n              Selected Form to URL\n            </CustomButton>\n          </ContainerFlexWidthCustom>\n\n          <ContainerFlexWidthCustom widthPercent={20}>\n            <CustomButton\n              onClick={() => setTypeFormSelected(\"json\")}\n              style={{\n                width: \"100%\",\n                textTransform: \"none\",\n                background: typeFormSelected === \"json\" ? \"#1976d2\" : \"#c4c4c4\",\n              }}\n              variant=\"contained\"\n            >\n              Select Form to Request JSON\n            </CustomButton>\n          </ContainerFlexWidthCustom>\n        </ContainerRow>\n      )}\n      <Container>\n        <Form\n          dataDefault={dataDefault}\n          base_url={base_url}\n          setBaseUrl={setBaseUrl}\n          gateway_token={gateway_token}\n          setGateway_token={setGateway_token}\n          data={data}\n          setUrlGenerated={setUrlGenerated}\n          handleGenerateURL={() => handleGenerateSignature()}\n          setData={setData}\n          typeFormSelected={typeFormSelected}\n        />\n        <ContainerResult>\n          {urlGenerated && (\n            <>\n              {typeFormSelected === \"url\" && (\n                <RequestJson\n                  type={typeFormSelected}\n                  style={{ marginBottom: 20 }}\n                  urlGateway={urlGateway}\n                  label=\"URL to Gateway Web:\"\n                  textButton=\"Open URL Gateway\"\n                  baseUrl={dataDefault.base_url}\n                  isDevLocalhost={isDevLocalhost}\n                  devLocalhostPort={devLocalhostPort}\n                />\n              )}\n\n              {typeFormSelected === \"json\" && (\n                <RequestJson\n                  type={typeFormSelected}\n                  style={{ marginBottom: 20 }}\n                  dataRequest={data}\n                  url={url}\n                  label=\"JSON Post Request:\"\n                  textButton=\"Copy JSON\"\n                  baseUrl={dataDefault.base_url}\n                  isDevLocalhost={isDevLocalhost}\n                  devLocalhostPort={devLocalhostPort}\n                />\n              )}\n            </>\n          )}\n          <CustomButton\n            size=\"large\"\n            onClick={() => handleGenerateSignature()}\n            style={{\n              width: \"100%\",\n              textTransform: \"none\",\n              minWidth: \"100%\",\n              marginRight: 0,\n            }}\n            variant=\"contained\"\n          >\n            {`Generate ${typeFormSelected.toUpperCase()}`}\n          </CustomButton>\n          {urlGenerated && (\n            <UrlParametersList\n              baseUrl={base_url}\n              parameters={urlGatewayParameters}\n            />\n          )}\n        </ContainerResult>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-duplicates */\nimport React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport App from \"./app\";\n\nconst BrowserRouter = ({ history }) => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"*\" component={App} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Routes from \"./routes\";\nimport ForceReloadDataProvider from \"./contexts/forceReloadData\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ForceReloadDataProvider>\n      <Routes history={history} />\n    </ForceReloadDataProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}