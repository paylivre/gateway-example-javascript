{"version":3,"sources":["components/styles.js","components/Form/styles.js","components/Input/styles.js","components/Input/index.js","components/RadioGroup/index.js","components/CheckBox/index.js","utils/typesUtils.js","utils/pixKeyTypes.js","utils/generatePropsRandom.js","contexts/forceReloadData.js","components/Switch/index.js","components/Form/index.js","services/argon2i.js","utils/base64.js","data/formDataDefault.js","app/styles.js","components/RequestJson/styles.js","components/RequestJson/index.js","components/UrlParametersList/styles.js","components/UrlParametersList/index.js","app/index.js","routes.js","index.js"],"names":["ContainerRow","styled","div","ContainerFlexWidth","widthPercent","Container","ContainerHeight","height","ContainerCheckTypes","FormLabelCustom","h2","ContainerFlexWidthCustom","InputCustom","TextField","Input","label","value","setValue","style","marginBottom","marginTop","id","size","variant","onChange","e","target","StyledFormControlLabel","props","FormControlLabel","theme","checked","color","palette","primary","main","MyFormControlLabel","defaultCheckedValue","useRadioGroup","UseRadioGroup","labelGroup","checkData","setChecked","validDirection","direction","FormLabel","userSelect","component","RadioGroup","defaultValue","name","event","flexDirection","map","data","control","Radio","CheckboxesGroup","isChecked","FormControl","sx","m","mr","FormGroup","Checkbox","typesList","WIRETRANFER","BILLET","PIX","WALLET","PixKeyTypes","getRandomHash","uuidv4","replace","substring","getRandomMerchantTransactionId","ForceReloadDataContext","createContext","ForceReloadDataProvider","children","useState","disable","setDisable","Provider","useForceReloadData","context","useContext","Error","InputSwitch","Switch","Form","setData","setGateway_token","gateway_token","setUrlGenerated","base_url","setBaseUrl","typeFormSelected","dataDefault","React","merchant_id","setMerchantId","merchant_transaction_id","setMerchantTransactionId","email","setEmail","document_number","setDocumentNumber","account_id","setAccountId","currency","setCurrency","operation","setOperation","amount","setAmount","callback_url","setcCallback_url","redirect_url","setRedirect_url","typesCheckeds","setTypesCheckeds","type","setType","selected_type","setSelected_type","checkDataSelectedType","setCheckDataSelectedType","pix_key_type","setPix_key_type","pix_key","setPix_key","login_email","setLoginEmail","password","setPassword","logo_url","setLogoUrl","auto_approve","setAuto_approve","setTypesChecked","typeKey","newTypesCheckeds","newType","binTypePix","binTypeBillet","binTypeWireTransfer","binTypeWallet","parseInt","toString","getTypeInteger","useEffect","newCheckDataSelectedType","push","enableCheckDataSelectedType","isDepositWallet","isWithdraw","getType","typeNumber","Number","isNaN","oldData","alignItems","margin","Button","onClick","width","textTransform","Typography","packageJson","version","argon2","require","getArgon2i","pass","a","hash","salt","time","mem","parallelism","hashLen","ArgonType","Argon2i","then","encoded","catch","console","error","message","code","argon2i","utf8_to_b64","str","window","btoa","unescape","encodeURIComponent","DataDefaultDev","DataDefaultPlayground","ContainerResult","CustomButton","PColor","p","RequestJson","dataRequest","url","urlGateway","textButton","rest","handleCopyToClipboard","dataRequestJson","JSON","stringify","textToCopy","copyToClipboard","textToNotification","NotificationManager","success","IconButtonMain","OpenInNewIcon","ContentCopyIcon","handleButtonAction","open","paddingTop","disabled","endIcon","marginLeft","maxWidth","background","SectionTitle","ListContainer","ul","ListItem","li","isEmpty","Alert","Legend","AlertContainer","requiredFields","UrlParametersList","parameters","baseUrl","validationArray","Object","entries","forEach","param","includes","length","index","isRequired","renderParametersItem","App","query","URLSearchParams","useLocation","search","isDev","get","isDevPlayground","urlGenerated","setURL","setUrlGateway","setTypeFormSelected","urlGatewayParameters","setUrlGatewayParameters","getUrlGateway","DataURL","signature","mock_type","mock_auto_approve","Signature","logoUrl","handleGenerateSignature","urlWithoutSignature","valueToGetArgon2iHash","argon2iHash","justifyContent","marginRight","handleGenerateURL","minWidth","toUpperCase","BrowserRouter","history","exact","path","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3801ae3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ContainerRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  height: auto;\r\n  @media (max-width: 930px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const ContainerFlexWidth = styled.div`\r\n  width: ${({ widthPercent }) => (widthPercent ? `${widthPercent}%` : \"100%\")};\r\n  flex-direction: row;\r\n  height: auto;\r\n  @media (max-width: 930px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ContainerFlexWidth } from \"../styles\";\r\n\r\nexport const Container = styled.div`\r\n  width: 45%;\r\n  height: auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0px 20px 20px 20px;\r\n  background-color: #ffffff;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport const ContainerHeight = styled.div`\r\n  width: 100%;\r\n  height: ${({ height }) => (height ? `${height}px` : 0)};\r\n  min-height: ${({ height }) => (height ? `${height}px` : 0)};\r\n`;\r\n\r\nexport const ContainerCheckTypes = styled.div`\r\n  width: 100%;\r\n  flex-direction: row;\r\n  height: auto;\r\n`;\r\n\r\nexport const FormLabelCustom = styled.h2`\r\n  font-size: 18px;\r\n  color: grey;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nexport const InputCustom = styled(TextField)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { InputCustom } from \"./styles\";\r\n\r\nfunction Input({ label, value, setValue }) {\r\n  return (\r\n    <InputCustom\r\n      value={value}\r\n      style={{ marginBottom: 5, marginTop: 5 }}\r\n      id=\"outlined-basic\"\r\n      label={label}\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      onChange={(e) => setValue(e.target.value)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport RadioGroup, { useRadioGroup } from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\n// import { Container } from './styles';\r\n\r\nconst StyledFormControlLabel = styled((props) => (\r\n  <FormControlLabel {...props} />\r\n))(({ theme, checked }) => ({\r\n  \".MuiFormControlLabel-label\": checked && {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nfunction MyFormControlLabel({ defaultCheckedValue, ...props }) {\r\n  const radioGroup = useRadioGroup();\r\n  let checked = false;\r\n  if (radioGroup) {\r\n    checked = defaultCheckedValue === props.value;\r\n  }\r\n\r\n  return <StyledFormControlLabel checked={checked} {...props} />;\r\n}\r\n\r\nexport default function UseRadioGroup({\r\n  labelGroup,\r\n  checkData = [],\r\n  defaultCheckedValue,\r\n  setChecked,\r\n  direction,\r\n}) {\r\n  const validDirection = direction || \"row\";\r\n\r\n  return (\r\n    <>\r\n      <FormLabel\r\n        style={{ userSelect: \"none\", marginTop: -13 }}\r\n        component=\"legend\"\r\n      >\r\n        {labelGroup}\r\n      </FormLabel>\r\n      <RadioGroup\r\n        defaultValue=\"first\"\r\n        name=\"use-radio-group\"\r\n        onChange={(event) => setChecked(event.target.value)}\r\n        style={{ flexDirection: validDirection }}\r\n      >\r\n        {checkData.map((data) => (\r\n          <MyFormControlLabel\r\n            key={data.value}\r\n            defaultCheckedValue={defaultCheckedValue}\r\n            value={data.value}\r\n            label={data.label}\r\n            control={<Radio />}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nexport default function CheckboxesGroup({ isChecked, setChecked, label }) {\r\n  return (\r\n    <FormControl sx={{ m: 0, mr: 3 }} component=\"fieldset\" variant=\"standard\">\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          style={{ userSelect: \"none\" }}\r\n          label={label || \"\"}\r\n          control={\r\n            <Checkbox\r\n              checked={isChecked}\r\n              onChange={(event) => setChecked(event.target.checked)}\r\n              name=\"gilad\"\r\n            />\r\n          }\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","// 0000 - 0 - Nenhum\r\n// 0001 - 1 - Pix\r\n// 0010 - 2 - Boleto\r\n// 0011 - 3 - Boleto, Pix\r\n// 0100 - 4 - TED\r\n// 0101 - 5 - TED, Pix\r\n// 0110 - 6 - TED, Boleto\r\n// 0111 - 7 - TED, Boleto, PIX\r\n// 1000 - 8 - Wallet\r\n// 1001 - 9 - Wallet, Pix\r\n// 1010 - 10 - Wallet, Boleto\r\n// 1011 - 11 - Wallet, Boleto, Pix\r\n// 1100 - 12 - Wallet, Ted\r\n// 1101 - 13 - Wallet, Ted, Pix\r\n// 1110 - 14 - Wallet, Ted, Boleto\r\n// 1111 - 15 - Wallet, Ted, Boleto, Pix (Todas)\r\n\r\n// 0 - TED\r\n// 1 - Boleto\r\n// 4 - PIX\r\n// 5 - Wallet\r\nexport const typesList = {\r\n  WIRETRANFER: 0,\r\n  BILLET: 1,\r\n  PIX: 4,\r\n  WALLET: 5,\r\n};\r\n\r\nexport function getTypeInteger(typesCheckeds) {\r\n  const binTypePix = typesCheckeds[4] ? \"1\" : \"0\";\r\n  const binTypeBillet = typesCheckeds[1] ? \"1\" : \"0\";\r\n  const binTypeWireTransfer = typesCheckeds[0] ? \"1\" : \"0\";\r\n  const binTypeWallet = typesCheckeds[5] ? \"1\" : \"0\";\r\n  const typeInBinary =\r\n    binTypeWallet + binTypeWireTransfer + binTypeBillet + binTypePix;\r\n  const typeInInteger = parseInt(typeInBinary, 2);\r\n  return typeInInteger.toString();\r\n}\r\n","// pix_key_type\r\n// 0 - document (cpf/cnpf)\r\n// 2 - phone\r\n// 3 - email\r\n\r\nexport const PixKeyTypes = {\r\n  document: \"0\",\r\n  phone: \"2\",\r\n  email: \"3\",\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport function getRandomHash(size) {\r\n  const randomMerchantTransactionId = uuidv4().replace(/-/g, \"\");\r\n  return randomMerchantTransactionId.substring(0, size);\r\n}\r\n\r\nexport function getRandomMerchantTransactionId() {\r\n  return getRandomHash(10);\r\n}\r\n\r\nexport function getRandomUserAccountId() {\r\n  return getRandomHash(6);\r\n}\r\n","import React, { createContext, useState, useContext } from \"react\";\r\n\r\nexport const ForceReloadDataContext = createContext();\r\n\r\nexport default function ForceReloadDataProvider({ children }) {\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  return (\r\n    <ForceReloadDataContext.Provider\r\n      value={{\r\n        disable,\r\n        setDisable,\r\n      }}\r\n    >\r\n      {children}\r\n    </ForceReloadDataContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useForceReloadData() {\r\n  const context = useContext(ForceReloadDataContext);\r\n  if (!context)\r\n    throw new Error(\"useDisable must be used within a ForceReloadDataProvider\");\r\n  const { disable, setDisable } = context;\r\n  return { disable, setDisable };\r\n}\r\n","import { FormLabel, Switch } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst InputSwitch = (props) => {\r\n  const { name, checked, label, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      <FormLabel\r\n        style={{ userSelect: \"none\", marginTop: -13 }}\r\n        component=\"legend\"\r\n      >\r\n        {label}\r\n      </FormLabel>\r\n      <Switch\r\n        checked={checked}\r\n        onChange={(event) => onChange(event)}\r\n        color=\"primary\"\r\n        name={name}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputSwitch;\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { Typography } from \"@mui/material\";\r\nimport {\r\n  Container,\r\n  FormLabelCustom,\r\n  ContainerHeight,\r\n  ContainerCheckTypes,\r\n  ContainerFlexWidthCustom,\r\n} from \"./styles\";\r\n\r\nimport { ContainerRow } from \"../styles\";\r\n\r\nimport Input from \"../Input\";\r\nimport RadioGroup from \"../RadioGroup\";\r\nimport Checkbox from \"../CheckBox\";\r\nimport { typesList, getTypeInteger } from \"../../utils/typesUtils\";\r\nimport { PixKeyTypes } from \"../../utils/pixKeyTypes\";\r\n\r\nimport { getRandomMerchantTransactionId } from \"../../utils/generatePropsRandom\";\r\n\r\nimport { useForceReloadData } from \"../../contexts/forceReloadData\";\r\nimport InputSwitch from \"../Switch\";\r\nimport packageJson from \"../../../package.json\";\r\n\r\nfunction Form({\r\n  setData,\r\n  setGateway_token,\r\n  gateway_token,\r\n  setUrlGenerated,\r\n  base_url,\r\n  setBaseUrl,\r\n  typeFormSelected,\r\n  dataDefault,\r\n}) {\r\n  const logo_url_example =\r\n    \"https://github.com/paylivre/gateway-example-react-js/blob/master/assets/logo_jackpot_new.png?raw=true\";\r\n  const operation_deposit = \"0\";\r\n  const operation_withdraw = \"5\";\r\n  const [merchant_id, setMerchantId] = React.useState(dataDefault.merchant_id);\r\n  const [merchant_transaction_id, setMerchantTransactionId] = React.useState(\r\n    getRandomMerchantTransactionId()\r\n  );\r\n  const [email, setEmail] = React.useState(dataDefault.email);\r\n  const [document_number, setDocumentNumber] = React.useState(\r\n    dataDefault.document_number\r\n  );\r\n  const [account_id, setAccountId] = React.useState(\"123654asd\");\r\n  const [currency, setCurrency] = React.useState(\"BRL\");\r\n  const [operation, setOperation] = React.useState(operation_deposit);\r\n  const [amount, setAmount] = React.useState(\"500\");\r\n  const [callback_url, setcCallback_url] = React.useState(\r\n    \"https://www.google.com\"\r\n  );\r\n  const [redirect_url, setRedirect_url] = React.useState(\r\n    \"https://www.merchant_to_you.com\"\r\n  );\r\n  const [typesCheckeds, setTypesCheckeds] = React.useState({\r\n    [typesList.WIRETRANFER]: false,\r\n    [typesList.BILLET]: false,\r\n    [typesList.PIX]: true,\r\n    [typesList.WALLET]: false,\r\n  });\r\n  const [type, setType] = React.useState(\"1\");\r\n  const [selected_type, setSelected_type] = React.useState(\"4\");\r\n  const [checkDataSelectedType, setCheckDataSelectedType] = React.useState([]);\r\n  const [pix_key_type, setPix_key_type] = React.useState(PixKeyTypes.document);\r\n  const [pix_key, setPix_key] = React.useState(dataDefault.document_number);\r\n  const [login_email, setLoginEmail] = React.useState(dataDefault.email);\r\n  const [password, setPassword] = React.useState(\"123123123\");\r\n  const [logo_url, setLogoUrl] = React.useState(logo_url_example);\r\n  const [auto_approve, setAuto_approve] = React.useState(\"1\");\r\n\r\n  const { disable, setDisable } = useForceReloadData();\r\n\r\n  function setTypesChecked(typeKey, isChecked) {\r\n    const newTypesCheckeds = { ...typesCheckeds, [typeKey]: isChecked };\r\n    setTypesCheckeds(newTypesCheckeds);\r\n    const newType = getTypeInteger(newTypesCheckeds);\r\n    setType(newType);\r\n  }\r\n\r\n  useEffect(() => {\r\n    function enableCheckDataSelectedType() {\r\n      const newCheckDataSelectedType = [];\r\n      if (typesCheckeds[4]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.PIX.toString(),\r\n          label: \"Pix\",\r\n        });\r\n      }\r\n      if (typesCheckeds[1]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.BILLET.toString(),\r\n          label: \"Billet\",\r\n        });\r\n      }\r\n      if (typesCheckeds[0]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.WIRETRANFER.toString(),\r\n          label: \"Wire Transfer\",\r\n        });\r\n      }\r\n      if (typesCheckeds[5]) {\r\n        newCheckDataSelectedType.push({\r\n          value: typesList.WALLET.toString(),\r\n          label: \"Paylivre Wallet\",\r\n        });\r\n      }\r\n\r\n      setCheckDataSelectedType(newCheckDataSelectedType);\r\n    }\r\n    enableCheckDataSelectedType();\r\n  }, [typesCheckeds]);\r\n\r\n  const isDepositWallet =\r\n    typeFormSelected === \"json\" &&\r\n    operation === operation_deposit &&\r\n    selected_type === \"5\";\r\n\r\n  useEffect(() => {\r\n    // Toda vez que alterar algum dado no data\r\n    setUrlGenerated(false);\r\n    setDisable(false);\r\n\r\n    const isWithdraw = operation === operation_withdraw;\r\n\r\n    function getType() {\r\n      if (operation === operation_withdraw) {\r\n        const typeNumber = Number(type);\r\n        if (Number.isNaN(typeNumber)) {\r\n          return \"0\";\r\n        }\r\n        if (typeNumber > 1) {\r\n          return \"1\";\r\n        }\r\n        return type;\r\n      }\r\n      return type;\r\n    }\r\n\r\n    setData((oldData) => {\r\n      return {\r\n        ...oldData,\r\n        account_id,\r\n        amount,\r\n        auto_approve,\r\n        callback_url,\r\n        currency,\r\n        document_number,\r\n        email,\r\n        merchant_id,\r\n        operation,\r\n        merchant_transaction_id,\r\n        redirect_url,\r\n        selected_type: type === \"0\" ? \"\" : selected_type,\r\n        type: getType(),\r\n        login_email: isDepositWallet ? login_email : \"\",\r\n        password: isDepositWallet ? password : \"\",\r\n        pix_key_type: isWithdraw ? pix_key_type : \"\",\r\n        pix_key: isWithdraw ? pix_key : \"\",\r\n        logo_url,\r\n      };\r\n    });\r\n  }, [\r\n    setData,\r\n    merchant_id,\r\n    merchant_transaction_id,\r\n    email,\r\n    document_number,\r\n    account_id,\r\n    auto_approve,\r\n    currency,\r\n    operation,\r\n    amount,\r\n    callback_url,\r\n    redirect_url,\r\n    setUrlGenerated,\r\n    gateway_token,\r\n    base_url,\r\n    type,\r\n    selected_type,\r\n    pix_key_type,\r\n    pix_key,\r\n    logo_url,\r\n  ]);\r\n\r\n  function handleReloadRandomFormatData() {\r\n    setMerchantTransactionId(getRandomMerchantTransactionId());\r\n    setDisable(false);\r\n  }\r\n\r\n  function isAutoApproveSelected() {\r\n    return auto_approve ? (\r\n      <Typography component=\"span\" color=\"primary\">\r\n        true\r\n      </Typography>\r\n    ) : (\r\n      <Typography component=\"span\" color=\"error\">\r\n        false\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerRow\r\n        style={{ marginBottom: 20, height: 50, alignItems: \"center\" }}\r\n      >\r\n        <ContainerFlexWidthCustom widthPercent={48}>\r\n          <FormLabelCustom style={{ margin: 0 }}>\r\n            Merchant Data:\r\n          </FormLabelCustom>\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerFlexWidthCustom widthPercent={50} style={{}}>\r\n          <Button\r\n            onClick={() => handleReloadRandomFormatData()}\r\n            style={{\r\n              width: \"100%\",\r\n              textTransform: \"none\",\r\n            }}\r\n            variant={disable === true ? \"contained\" : \"outlined\"}\r\n            color=\"success\"\r\n          >\r\n            Reload Random Data\r\n          </Button>\r\n        </ContainerFlexWidthCustom>\r\n      </ContainerRow>\r\n      <ContainerRow>\r\n        <ContainerFlexWidthCustom widthPercent={48}>\r\n          <Input\r\n            value={merchant_id}\r\n            setValue={(value) => setMerchantId(value)}\r\n            label=\"Merchant ID:\"\r\n          />\r\n          <ContainerHeight height={15} />\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerFlexWidthCustom widthPercent={45}>\r\n          <Input\r\n            value={merchant_transaction_id}\r\n            setValue={(value) => setMerchantTransactionId(value)}\r\n            label=\"Merchant Transaction ID:\"\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n      </ContainerRow>\r\n      <ContainerHeight height={5} />\r\n      <Input\r\n        value={gateway_token}\r\n        setValue={(value) => setGateway_token(value)}\r\n        label=\"Gateway Token:\"\r\n      />\r\n      <FormLabelCustom>User Data:</FormLabelCustom>\r\n      <Input\r\n        value={email}\r\n        setValue={(value) => setEmail(value)}\r\n        label=\"User Email: (OPTIONAL)\"\r\n      />\r\n      <ContainerHeight height={20} />\r\n      <ContainerRow>\r\n        <ContainerFlexWidthCustom widthPercent={48}>\r\n          <Input\r\n            value={document_number}\r\n            setValue={(value) => setDocumentNumber(value)}\r\n            label=\"User Document - CPF/CNPJ: (OPTIONAL)\"\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n\r\n        <ContainerFlexWidthCustom widthPercent={48}>\r\n          <Input\r\n            value={account_id}\r\n            setValue={(value) => setAccountId(value)}\r\n            label=\"User Account ID in Merchant:\"\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n      </ContainerRow>\r\n      <FormLabelCustom>Transaction Data:</FormLabelCustom>\r\n      <ContainerRow>\r\n        <ContainerFlexWidthCustom widthPercent={50}>\r\n          <Input\r\n            value={amount}\r\n            setValue={(value) => setAmount(value)}\r\n            label=\"Amount:\"\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerHeight height={15} />\r\n        <ContainerFlexWidthCustom widthPercent={60}>\r\n          <InputSwitch\r\n            label=\"Auto approve\"\r\n            checked={auto_approve}\r\n            onChange={(event) => setAuto_approve(event.target.checked ? 1 : 0)}\r\n          />\r\n          {isAutoApproveSelected()}\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerFlexWidthCustom widthPercent={60}>\r\n          <RadioGroup\r\n            defaultCheckedValue={currency}\r\n            setChecked={(value) => setCurrency(value)}\r\n            labelGroup=\"Currency\"\r\n            checkData={[\r\n              { value: \"BRL\", label: \"BRL\" },\r\n              { value: \"USD\", label: \"USD\" },\r\n            ]}\r\n          />\r\n        </ContainerFlexWidthCustom>\r\n      </ContainerRow>\r\n      <ContainerHeight height={15} />\r\n      <RadioGroup\r\n        defaultCheckedValue={operation}\r\n        setChecked={(value) => setOperation(value)}\r\n        labelGroup=\"Operation\"\r\n        checkData={[\r\n          { value: \"0\", label: \"Deposit\" },\r\n          { value: \"5\", label: \"Withdraw\" },\r\n        ]}\r\n      />\r\n      <ContainerHeight height={15} />\r\n      <FormLabel component=\"legend\">Type passed by merchant</FormLabel>\r\n      <ContainerCheckTypes>\r\n        <Checkbox\r\n          label=\"PIX\"\r\n          isChecked={typesCheckeds[typesList.PIX]}\r\n          setChecked={(isChecked) => setTypesChecked(typesList.PIX, isChecked)}\r\n        />\r\n        {operation === operation_deposit && (\r\n          <>\r\n            <Checkbox\r\n              label=\"Billet\"\r\n              isChecked={typesCheckeds[typesList.BILLET]}\r\n              setChecked={(isChecked) =>\r\n                setTypesChecked(typesList.BILLET, isChecked)\r\n              }\r\n            />\r\n            <Checkbox\r\n              label=\"Wire Transfer\"\r\n              isChecked={typesCheckeds[typesList.WIRETRANFER]}\r\n              setChecked={(isChecked) =>\r\n                setTypesChecked(typesList.WIRETRANFER, isChecked)\r\n              }\r\n            />\r\n            <Checkbox\r\n              label=\"Paylivre Wallet\"\r\n              isChecked={typesCheckeds[typesList.WALLET]}\r\n              setChecked={(isChecked) =>\r\n                setTypesChecked(typesList.WALLET, isChecked)\r\n              }\r\n            />\r\n          </>\r\n        )}\r\n      </ContainerCheckTypes>\r\n      {typeFormSelected === \"json\" && (\r\n        <>\r\n          <ContainerHeight height={15} />\r\n          <RadioGroup\r\n            defaultCheckedValue={selected_type}\r\n            setChecked={(value) => setSelected_type(value)}\r\n            labelGroup=\"User selected type\"\r\n            checkData={checkDataSelectedType}\r\n          />\r\n        </>\r\n      )}\r\n      {isDepositWallet && (\r\n        <>\r\n          <ContainerHeight height={15} />\r\n          <ContainerRow>\r\n            <ContainerFlexWidthCustom widthPercent={48}>\r\n              <Input\r\n                value={login_email}\r\n                setValue={(value) => setLoginEmail(value)}\r\n                label=\"Email Login Paylivre\"\r\n              />\r\n              <ContainerHeight height={15} />\r\n            </ContainerFlexWidthCustom>\r\n            <ContainerFlexWidthCustom widthPercent={45}>\r\n              <Input\r\n                value={password}\r\n                setValue={(value) => setPassword(value)}\r\n                label=\"Password Login Paylivre\"\r\n              />\r\n            </ContainerFlexWidthCustom>\r\n          </ContainerRow>\r\n        </>\r\n      )}\r\n      {typeFormSelected === \"json\" &&\r\n        operation === operation_withdraw &&\r\n        selected_type === \"4\" && (\r\n          <ContainerRow>\r\n            <ContainerFlexWidthCustom widthPercent={48}>\r\n              <ContainerHeight height={25} />\r\n              <RadioGroup\r\n                defaultCheckedValue={pix_key_type}\r\n                setChecked={(value) => setPix_key_type(value)}\r\n                labelGroup=\"Pix Key Type\"\r\n                checkData={[\r\n                  { value: PixKeyTypes.document, label: \"CPF/CNPJ\" },\r\n                  { value: PixKeyTypes.phone, label: \"Phone\" },\r\n                  { value: PixKeyTypes.email, label: \"Email\" },\r\n                ]}\r\n              />\r\n            </ContainerFlexWidthCustom>\r\n\r\n            <ContainerFlexWidthCustom widthPercent={48}>\r\n              <ContainerHeight height={30} />\r\n              <Input\r\n                value={pix_key}\r\n                setValue={(value) => setPix_key(value)}\r\n                label=\"User Pix Key\"\r\n              />\r\n            </ContainerFlexWidthCustom>\r\n          </ContainerRow>\r\n        )}\r\n      <ContainerHeight height={15} />\r\n      <Input\r\n        value={callback_url}\r\n        setValue={(value) => setcCallback_url(value)}\r\n        label=\"Callback URL:\"\r\n      />\r\n      <ContainerHeight height={20} />\r\n      <Input\r\n        value={redirect_url}\r\n        setValue={(value) => setRedirect_url(value)}\r\n        label=\"Redirect URL: (OPTIONAL)\"\r\n      />\r\n      <ContainerHeight height={15} />\r\n      <FormLabelCustom>Environment:</FormLabelCustom>\r\n      <Input\r\n        value={base_url}\r\n        setValue={(value) => setBaseUrl(value)}\r\n        label=\"Base URL:\"\r\n      />\r\n      <ContainerHeight height={15} />\r\n      <Input\r\n        value={logo_url}\r\n        setValue={(value) => setLogoUrl(value)}\r\n        label=\"Logo URL: (OPTIONAL)\"\r\n      />\r\n      <Typography variant=\"p\" component=\"p\" style={{ margin: \"0.6rem 0\" }}>\r\n        v{packageJson.version}\r\n      </Typography>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { getRandomHash } from \"../utils/generatePropsRandom\";\r\n\r\nconst argon2 = require(\"argon2-browser\");\r\n\r\nexport async function getArgon2i(pass) {\r\n  const argon2i = await argon2\r\n    .hash({\r\n      pass,\r\n      salt: getRandomHash(14),\r\n      time: 2,\r\n      mem: 16,\r\n      parallelism: 1,\r\n      hashLen: 16,\r\n      type: argon2.ArgonType.Argon2i,\r\n    })\r\n    .then((hash) => hash.encoded)\r\n    .catch((e) => console.error(e.message, e.code));\r\n  return argon2i;\r\n}\r\n","export function utf8_to_b64(str) {\r\n  return window.btoa(unescape(encodeURIComponent(str)));\r\n}\r\n","export const DataDefaultDev = {\r\n  base_url: \"https://dev.gateway.paylivre.com\",\r\n  gateway_token: \"UdXN2e33r3xlldm1UJSXGR5mslv9HeWP\",\r\n  merchant_id: \"302\",\r\n  merchant_transaction_id: \"\",\r\n  email: \"user_gateway_test@tutanota.com\",\r\n  document_number: \"61317581075\",\r\n};\r\n\r\nexport const DataDefaultPlayground = {\r\n  base_url: \"https://playground.gateway.paylivre.com\",\r\n  gateway_token: \"0c85yWaiBWx1Mclvink7suWrHoEQnH8Q\",\r\n  merchant_id: \"1508\",\r\n  merchant_transaction_id: \"\",\r\n  email: \"user_gateway_test@tutanota.com\",\r\n  document_number: \"61317581075\",\r\n};\r\n","import styled from \"styled-components\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { ContainerFlexWidth } from \"../components/styles\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 10px;\r\n  background: #fff;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  flex-direction: row;\r\n  @media (max-width: 930px) {\r\n    flex-direction: column;\r\n    padding: 20px;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const ContainerResult = styled.div`\r\n  width: 40%;\r\n  margin-left: 20px;\r\n  height: auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0px 20px 20px 20px;\r\n  background-color: #ffffff;\r\n  border-radius: 5px;\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n    margin-left: 0px;\r\n  }\r\n`;\r\n\r\nexport const CustomButton = styled(Button)`\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { ContainerFlexWidth } from \"../styles\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  background: #292929;\r\n  flex-wrap: nowrap;\r\n  width: auto;\r\n  height: auto;\r\n  min-height: 100px;\r\n  justify-content: center;\r\n  padding: 0 20px 20px 20px;\r\n  border-radius: 5px;\r\n  flex-direction: column;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 930px) {\r\n    width: 88%;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nexport const PColor = styled.p`\r\n  font-size: small;\r\n  color: ${({ color }) => color || \"#fff\"};\r\n  margin: 0;\r\n  max-width: 100%;\r\n  display: flex;\r\n  font-size: 14px;\r\n  word-break: break-all;\r\n  font-family: \"Courier New\", Courier, monospace;\r\n`;\r\n\r\nexport const FormLabelCustom = styled.h2`\r\n  font-size: 18px;\r\n  color: white;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const ContainerFlexWidthCustom = styled(ContainerFlexWidth)`\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n    flex-direction: column;\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n\r\nexport const CustomButton = styled(Button)`\r\n  @media (max-width: 930px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport copyToClipboard from \"copy-to-clipboard\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\n\r\nimport JSONPretty from \"react-json-pretty\";\r\nimport \"./jsonStyle.css\";\r\nimport {\r\n  Container,\r\n  PColor,\r\n  FormLabelCustom,\r\n  ContainerFlexWidthCustom,\r\n  CustomButton,\r\n} from \"./styles\";\r\nimport { ContainerRow } from \"../styles\";\r\n\r\nimport { useForceReloadData } from \"../../contexts/forceReloadData\";\r\n\r\nfunction RequestJson({\r\n  dataRequest,\r\n  url,\r\n  urlGateway,\r\n  label,\r\n  textButton,\r\n  type,\r\n  ...rest\r\n}) {\r\n  const { disable, setDisable } = useForceReloadData();\r\n\r\n  function handleCopyToClipboard() {\r\n    if (!disable) {\r\n      const dataRequestJson = JSON.stringify({ ...dataRequest, url });\r\n      const textToCopy = type === \"url\" ? urlGateway : dataRequestJson;\r\n      copyToClipboard(textToCopy);\r\n      const textToNotification = type === \"url\" ? \"Copied URL\" : \"JSON Copied\";\r\n      NotificationManager.success(textToNotification, \"\", 1000);\r\n      setDisable(true);\r\n    }\r\n  }\r\n\r\n  const IconButtonMain = type === \"url\" ? OpenInNewIcon : ContentCopyIcon;\r\n\r\n  function handleOpenUrlNewWindow() {\r\n    if (!disable) {\r\n      window.open(urlGateway);\r\n      setDisable(true);\r\n    }\r\n  }\r\n\r\n  function handleButtonAction() {\r\n    if (type === \"url\") {\r\n      handleOpenUrlNewWindow();\r\n    } else {\r\n      handleCopyToClipboard();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container {...rest}>\r\n      <ContainerRow\r\n        style={{ alignItems: \"center\", paddingTop: 10, marginBottom: 10 }}\r\n      >\r\n        <ContainerFlexWidthCustom widthPercent={50}>\r\n          <FormLabelCustom>{label}</FormLabelCustom>\r\n        </ContainerFlexWidthCustom>\r\n        <ContainerFlexWidthCustom widthPercent={50}>\r\n          <CustomButton\r\n            disabled={disable}\r\n            endIcon={<IconButtonMain />}\r\n            onClick={() => handleButtonAction()}\r\n            style={{ width: \"100%\", textTransform: \"none\" }}\r\n            variant=\"contained\"\r\n          >\r\n            {textButton}\r\n          </CustomButton>\r\n        </ContainerFlexWidthCustom>\r\n        {type === \"url\" && (\r\n          <ContainerFlexWidthCustom\r\n            widthPercent={50}\r\n            style={{ marginLeft: 20, maxWidth: 140 }}\r\n          >\r\n            <CustomButton\r\n              disabled={disable}\r\n              endIcon={<ContentCopyIcon />}\r\n              onClick={() => handleCopyToClipboard()}\r\n              style={{\r\n                width: \"100%\",\r\n                textTransform: \"none\",\r\n                background: \"#fff\",\r\n              }}\r\n              variant=\"outlined\"\r\n            >\r\n              Copy URL\r\n            </CustomButton>\r\n          </ContainerFlexWidthCustom>\r\n        )}\r\n      </ContainerRow>\r\n\r\n      <NotificationContainer />\r\n\r\n      {dataRequest && (\r\n        <JSONPretty id=\"json-pretty\" data={{ ...dataRequest, url }} />\r\n      )}\r\n\r\n      {urlGateway && <PColor color=\"#ffff80\">{urlGateway}</PColor>}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RequestJson;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: start;\r\n  background: transparent;\r\n  flex-wrap: wrap;\r\n  width: auto;\r\n  height: auto;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  flex-direction: column;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 930px) {\r\n    width: 88%;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  font-size: 18px;\r\n  color: grey;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const ListContainer = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: start;\r\n  padding: 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: small;\r\n  color: ${(props) => props.isEmpty && \"#be453a\"};\r\n  margin: 0;\r\n  max-width: 100%;\r\n  display: flex;\r\n  font-size: 1.2rem;\r\n  word-break: break-all;\r\n  margin: 0.2rem 0;\r\n  /* font-family: \"Courier New\", Courier, monospace; */\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const Alert = styled.h2`\r\n  font-size: 18px;\r\n  color: #be453a;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const Legend = styled.p`\r\n  font-size: 1rem;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n`;\r\n\r\nexport const AlertContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: start;\r\n  background: transparent;\r\n  flex-wrap: wrap;\r\n  width: auto;\r\n  height: auto;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  flex-direction: column;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 930px) {\r\n    width: 88%;\r\n    padding: 20px;\r\n  }\r\n`;\r\n","import { Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { ContainerFlexWidth } from \"../styles\";\r\nimport {\r\n  Alert,\r\n  AlertContainer,\r\n  Container,\r\n  Legend,\r\n  ListContainer,\r\n  ListItem,\r\n  SectionTitle,\r\n} from \"./styles\";\r\n\r\nconst requiredFields = [\r\n  \"merchant_id\",\r\n  \"operation\",\r\n  \"merchant_transaction_id\",\r\n  \"amount\",\r\n  \"currency\",\r\n  \"mock_type\",\r\n  \"account_id\",\r\n  \"mock_auto_approve\",\r\n  \"callback_url\",\r\n];\r\n\r\nconst UrlParametersList = (props) => {\r\n  const { parameters, baseUrl } = props;\r\n  const validationArray = [];\r\n\r\n  Object.entries(parameters).forEach((param) =>\r\n    validationArray.push(\r\n      requiredFields.includes(param[0]) && param[1].length === 0\r\n    )\r\n  );\r\n\r\n  function renderParametersItem(param, index) {\r\n    const isRequired = requiredFields.includes(param[0]);\r\n    const isEmpty = param[1].length === 0;\r\n    return (\r\n      <ListItem key={index} isEmpty={isEmpty}>\r\n        {isRequired && \"*\"}\r\n        {`${param[0]} = ${param[1]}`}\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  function renderAlert() {\r\n    return (\r\n      <AlertContainer>\r\n        {validationArray.includes(true) && (\r\n          <Alert>All mandatory fields must be filled!</Alert>\r\n        )}\r\n        <Typography variant=\"p\" component=\"p\">\r\n          Legend:\r\n        </Typography>\r\n        <Legend>* - Mandatory field</Legend>\r\n      </AlertContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerFlexWidth>\r\n        <SectionTitle>Url Parameters</SectionTitle>\r\n        <ListContainer>\r\n          <ListItem>{baseUrl}</ListItem>\r\n          <br />\r\n          {Object.entries(parameters).map((param, index) =>\r\n            renderParametersItem(param, index)\r\n          )}\r\n        </ListContainer>\r\n      </ContainerFlexWidth>\r\n      {renderAlert()}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UrlParametersList;\r\n","/* eslint-disable no-unused-expressions */\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Form from \"../components/Form\";\r\nimport { getArgon2i } from \"../services/argon2i\";\r\nimport { utf8_to_b64 } from \"../utils/base64\";\r\nimport { DataDefaultDev, DataDefaultPlayground } from \"../data/formDataDefault\";\r\nimport {\r\n  Container,\r\n  ContainerResult,\r\n  CustomButton,\r\n  ContainerFlexWidthCustom,\r\n} from \"./styles\";\r\n\r\nimport { ContainerRow } from \"../components/styles\";\r\n\r\nimport RequestJson from \"../components/RequestJson\";\r\nimport UrlParametersList from \"../components/UrlParametersList\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction App() {\r\n  const query = useQuery();\r\n  const isDev = query.get(\"dev\") === \"1\";\r\n  const isDevPlayground = query.get(\"playground\") === \"1\";\r\n  const dataDefault = !isDev\r\n    ? DataDefaultPlayground\r\n    : isDevPlayground\r\n    ? DataDefaultPlayground\r\n    : DataDefaultDev;\r\n\r\n  const [base_url, setBaseUrl] = React.useState(dataDefault.base_url);\r\n  const [data, setData] = React.useState({});\r\n  const [gateway_token, setGateway_token] = React.useState(\r\n    dataDefault.gateway_token\r\n  );\r\n  const [urlGenerated, setUrlGenerated] = React.useState(false);\r\n  const [url, setURL] = React.useState(\"\");\r\n  const [urlGateway, setUrlGateway] = React.useState(\"\");\r\n  const [typeFormSelected, setTypeFormSelected] = React.useState(\"url\");\r\n  const [urlGatewayParameters, setUrlGatewayParameters] = React.useState({});\r\n\r\n  function getUrlGateway(DataURL, signature) {\r\n    const merchant_transaction_id = `merchant_transaction_id=${DataURL.merchant_transaction_id}`;\r\n    const merchant_id = `merchant_id=${DataURL.merchant_id}`;\r\n    const account_id = `account_id=${DataURL.account_id}`;\r\n    const amount = `amount=${DataURL.amount}`;\r\n    const currency = `currency=${DataURL.currency}`;\r\n    const operation = `operation=${DataURL.operation}`;\r\n    const callback_url = `callback_url=${DataURL.callback_url}`;\r\n    const redirect_url = `redirect_url=${DataURL.redirect_url}`;\r\n    const mock_type = `type=${DataURL.type}`;\r\n    const mock_auto_approve = `auto_approve=${DataURL.auto_approve}`;\r\n    const Signature = signature ? `&signature=${signature}` : \"\";\r\n    const logoUrl = DataURL.logo_url ? `&logo_url=${DataURL.logo_url}` : \"\";\r\n    const email = DataURL.email ? `&email=${DataURL.email}` : \"\";\r\n    const document_number = DataURL.document_number\r\n      ? `&document_number=${DataURL.document_number}`\r\n      : \"\";\r\n\r\n    setUrlGatewayParameters({\r\n      merchant_transaction_id: DataURL.merchant_transaction_id,\r\n      merchant_id: DataURL.merchant_id,\r\n      account_id: DataURL.account_id,\r\n      amount: DataURL.amount,\r\n      currency: DataURL.currency,\r\n      operation: DataURL.operation,\r\n      callback_url: DataURL.callback_url,\r\n      redirect_url: DataURL.redirect_url,\r\n      type: DataURL.type,\r\n      auto_approve: DataURL.auto_approve,\r\n      signature: signature || \"\",\r\n      logoUrl: DataURL.logo_url ? DataURL.logo_url : \"\",\r\n      email: DataURL.email ? DataURL.email : \"\",\r\n      document_number: DataURL.document_number ? DataURL.document_number : \"\",\r\n    });\r\n\r\n    const UrlGateway = `${base_url}?${merchant_transaction_id}&${merchant_id}&${operation}${email}${document_number}&${amount}&${currency}&${mock_type}&${account_id}&${callback_url}&${redirect_url}&${mock_auto_approve}${Signature}${logoUrl}`;\r\n\r\n    return UrlGateway;\r\n  }\r\n\r\n  async function handleGenerateSignature() {\r\n    const urlWithoutSignature = getUrlGateway(data);\r\n    const valueToGetArgon2iHash = gateway_token + urlWithoutSignature;\r\n    const argon2iHash = await getArgon2i(valueToGetArgon2iHash);\r\n    const signature = utf8_to_b64(argon2iHash);\r\n\r\n    setURL(urlWithoutSignature);\r\n\r\n    setUrlGateway(getUrlGateway(data, signature));\r\n\r\n    setData((oldData) => {\r\n      return { ...oldData, signature };\r\n    });\r\n    setUrlGenerated(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isDev && (\r\n        <ContainerRow style={{ justifyContent: \"center\" }}>\r\n          <ContainerFlexWidthCustom\r\n            widthPercent={20}\r\n            style={{ marginRight: 20, marginBottom: 20 }}\r\n          >\r\n            <CustomButton\r\n              onClick={() => setTypeFormSelected(\"url\")}\r\n              style={{\r\n                width: \"100%\",\r\n                textTransform: \"none\",\r\n                background: typeFormSelected === \"url\" ? \"#1976d2\" : \"#c4c4c4\",\r\n              }}\r\n              variant=\"contained\"\r\n            >\r\n              Selected Form to URL\r\n            </CustomButton>\r\n          </ContainerFlexWidthCustom>\r\n\r\n          <ContainerFlexWidthCustom widthPercent={20}>\r\n            <CustomButton\r\n              onClick={() => setTypeFormSelected(\"json\")}\r\n              style={{\r\n                width: \"100%\",\r\n                textTransform: \"none\",\r\n                background: typeFormSelected === \"json\" ? \"#1976d2\" : \"#c4c4c4\",\r\n              }}\r\n              variant=\"contained\"\r\n            >\r\n              Select Form to Request JSON\r\n            </CustomButton>\r\n          </ContainerFlexWidthCustom>\r\n        </ContainerRow>\r\n      )}\r\n      <Container>\r\n        <Form\r\n          dataDefault={dataDefault}\r\n          base_url={base_url}\r\n          setBaseUrl={setBaseUrl}\r\n          gateway_token={gateway_token}\r\n          setGateway_token={setGateway_token}\r\n          data={data}\r\n          setUrlGenerated={setUrlGenerated}\r\n          handleGenerateURL={() => handleGenerateSignature()}\r\n          setData={setData}\r\n          typeFormSelected={typeFormSelected}\r\n        />\r\n        <ContainerResult>\r\n          {urlGenerated && (\r\n            <>\r\n              {typeFormSelected === \"url\" && (\r\n                <RequestJson\r\n                  type={typeFormSelected}\r\n                  style={{ marginBottom: 20 }}\r\n                  urlGateway={urlGateway}\r\n                  label=\"URL to Gateway Web:\"\r\n                  textButton=\"Open URL Gateway\"\r\n                />\r\n              )}\r\n\r\n              {typeFormSelected === \"json\" && (\r\n                <RequestJson\r\n                  type={typeFormSelected}\r\n                  style={{ marginBottom: 20 }}\r\n                  dataRequest={data}\r\n                  url={url}\r\n                  label=\"JSON Post Request:\"\r\n                  textButton=\"Copy JSON\"\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n          <CustomButton\r\n            size=\"large\"\r\n            onClick={() => handleGenerateSignature()}\r\n            style={{\r\n              width: \"100%\",\r\n              textTransform: \"none\",\r\n              minWidth: \"100%\",\r\n              marginRight: 0,\r\n            }}\r\n            variant=\"contained\"\r\n          >\r\n            {`Generate ${typeFormSelected.toUpperCase()}`}\r\n          </CustomButton>\r\n          {urlGenerated && (\r\n            <UrlParametersList\r\n              baseUrl={base_url}\r\n              parameters={urlGatewayParameters}\r\n            />\r\n          )}\r\n        </ContainerResult>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable import/no-duplicates */\r\nimport React from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport App from \"./app\";\r\n\r\nconst BrowserRouter = ({ history }) => {\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route path=\"*\" component={App} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default BrowserRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport Routes from \"./routes\";\r\nimport ForceReloadDataProvider from \"./contexts/forceReloadData\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ForceReloadDataProvider>\r\n      <Routes history={history} />\r\n    </ForceReloadDataProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}